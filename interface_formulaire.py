
import streamlit as st
from fpdf import FPDF
import pandas as pd
import os
import datetime

date_demande = st.date_input("üìÖ Date de la demande", value=datetime.date.today())
date_visite = st.date_input("üìÜ Date de la visite")

st.title("Formulaire Immersive - Version Fran√ßaise")

def formater_date_fr(date):
    jours = ["lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi", "dimanche"]
    mois = ["janvier", "f√©vrier", "mars", "avril", "mai", "juin",
            "juillet", "ao√ªt", "septembre", "octobre", "novembre", "d√©cembre"]
    jour_semaine = jours[date.weekday()]
    return f"{jour_semaine.capitalize()} {date.day} {mois[date.month - 1]} {date.year}"


# Champs d'identit√©
reference = st.text_input("R√©f√©rence")
institution = st.text_input("Institution")
titre = st.selectbox("Titre", ["M.", "Mme", "Mlle"])
nom = st.text_input("Nom")
prenom = st.text_input("Pr√©nom")
adresse = st.text_input("Adresse")
adresse2 = st.text_input("Adresse 2")
code_postal = st.text_input("Code postal")
commune = st.text_input("Commune")
pays = st.text_input("Pays")
telephone = st.text_input("T√©l√©phone")
email = st.text_input("Email")

nom_clients = st.text_area("Nom des clients")

# Champs visite
langue = st.selectbox("Langue", ["Fran√ßais", "Anglais"])
niveau_scolaire = st.text_input("Niveau scolaire")
nombre_personnes = st.number_input("Nombre de personnes", min_value=1, step=1)
capacite_max = st.number_input("Capacit√© max", min_value=1, step=1)
programme = st.selectbox("Programme", [
    "Plages du D√©barquement (secteur US)", 
    "Plages du D√©barquement (secteur GB)",
    "Plages du D√©barquement (secteur Canadien)",
    "Plages du D√©barquement (US/GB)", 
    "Mont Saint Michel",
    "Vieux Bayeux et Cath√©drale",
    "M√©di√©val",
    "Autre"
])
detail_programme = st.text_area("Champ libre programme")

# Champs horaires
heure_debut = st.selectbox("Heure de d√©but", [f"{h:02d}:{m:02d}" for h in range(6, 21) for m in range(0, 60, 5)])
lieu_debut = st.text_input("Lieu de d√©but")
heure_fin = st.selectbox("Heure de fin", [f"{h:02d}:{m:02d}" for h in range(6, 22) for m in range(0, 60, 5)])
lieu_fin = st.text_input("Lieu de fin")

# Champs tarifs
type_visite = st.radio("Guide seul ou chauffeur-guide", ["Guide seul", "Chauffeur-guide"])
tarif_guidage = st.number_input("Tarif guidage HT (‚Ç¨)", min_value=0.0, step=1.0, format="%.2f")
tva_guidage = round(tarif_guidage * 0.20, 2)
tarif_chauffeur = st.number_input("Tarif chauffeur HT (‚Ç¨)", min_value=0.0, step=1.0, format="%.2f")
tva_chauffeur = round(tarif_chauffeur * 0.10, 2)
tarif_ttc = round(tarif_guidage + tva_guidage + tarif_chauffeur + tva_chauffeur, 2)

# Dur√©e estim√©e
from datetime import datetime
try:
    fmt = "%H:%M"
    debut = datetime.strptime(heure_debut, fmt)
    fin = datetime.strptime(heure_fin, fmt)
    duree = str(fin - debut)
except:
    duree = ""

# VIP
vip = st.checkbox("Visite VIP ?")
texte_vip = st.text_area("Informations suppl√©mentaires en cas de VIP") if vip else ""

# Donn√©es
ligne = {
    "Date de la demande": formater_date_fr(date_demande),
    "R√©f√©rence": reference,
    "Date de la visite": formater_date_fr(date_visite),
    "Institution": institution, 
    "Titre": titre,
    "Nom": nom,
    "Pr√©nom": prenom,
    "Adresse": adresse,
    "Adresse 2": adresse2,
    "Code postal": code_postal,
    "Commune": commune,
    "Pays": pays,
    "T√©l√©phone": telephone,
    "Email": email,
    "Nom clients": nom_clients,
    "Niveau scolaire": niveau_scolaire,
    "Nombre de personnes": nombre_personnes,
    "Capacit√© max": capacite_max,
    "Langue": langue,
    "Programme": programme,
    "D√©tail programme": detail_programme,
    "Heure de d√©but": heure_debut,
    "Lieu de d√©but": lieu_debut,
    "Heure de fin": heure_fin,
    "Lieu de fin": lieu_fin,
    "Dur√©e": duree,
    "Type de visite": type_visite,
    "Tarif guidage HT": f"{tarif_guidage:.2f}",
    "TVA guidage (20%)": f"{tva_guidage:.2f}",
    "Tarif chauffeur HT": f"{tarif_chauffeur:.2f}",
    "TVA chauffeur (10%)": f"{tva_chauffeur:.2f}",
    "Tarif TTC": f"{tarif_ttc:.2f}",
    "VIP": "Oui" if vip else "Non",
    "Texte VIP": texte_vip
}

# Export Excel
if st.button("Exporter vers Excel"):
    df = pd.DataFrame([ligne])
    df = df[['Date de la demande', 'R√©f√©rence', 'Date de la visite', 'Institution', 'Titre', 'Nom', 'Pr√©nom', 'Adresse', 'Adresse 2', 'Code postal', 'Commune', 'Pays', 'T√©l√©phone', 'Email', 'Nom clients', 'Niveau scolaire', 'Nombre de personnes', 'Capacit√© max', 'Langue', 'Programme', 'D√©tail programme', 'Heure de d√©but', 'Lieu de d√©but', 'Heure de fin', 'Lieu de fin', 'Dur√©e', 'Tarif guidage HT', 'TVA guidage (20%)', 'Tarif chauffeur HT', 'TVA chauffeur (10%)', 'Tarif TTC', 'VIP', 'Texte VIP']]
    fichier_excel = "formulaire_complet.xlsx"
    df.to_excel(fichier_excel, index=False)
    with open(fichier_excel, "rb") as f:
        st.download_button("T√©l√©charger le fichier Excel", f, fichier_excel)

# Export PDF
if st.button("G√©n√©rer le PDF"):
pdf = FPDF()
pdf.set_margins(15, 20)
pdf.add_page()

# Logo
pdf.image("logo.png", x=10, y=8, w=30)
pdf.ln(25)

# Titre
pdf.set_font("Times", 'B', 16)
pdf.cell(0, 10, "Formulaire Immersive - Donn√©es", ln=True, align="C")
pdf.ln(10)

# Texte
pdf.set_font("Times", size=12)
for key, value in ligne.items():
    pdf.multi_cell(0, 10, f"{key} : {value}")
